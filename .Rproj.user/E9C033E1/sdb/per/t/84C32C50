{
    "collab_server" : "",
    "contents" : "# Continuous data helper script\n# Default Values\n# Erik.Leppo@tetratech.com (EWL)\n# 20150928\n##################\n# User defined variable names for input data\n##################\n# It is assumed that this R script is stored in a directory with the data files as subdirectories\n# This script is intended to be \"source\"d from the main script.\n#############################\n\n#####################################################################\nconfig.LoggingLevel <- DEBUG\n\n# Directory Names\nconfig.Folder.RawData   <- file.path(config.Folder.Root, 'data', \"Data1_Raw\")\nconfig.Folder.QCData    <- file.path(config.Folder.Root, 'data', \"Data2_QC\")\nconfig.Folder.AggData   <- file.path(config.Folder.Root, 'data', \"Data3_Aggregated\")\nconfig.Folder.StatsData <- file.path(config.Folder.Root, 'data', \"Data4_Stats\")\n\n# this is where the log files are created\nconfig.Folder.Logs      <- file.path(config.Folder.Root, \"logs\")\n\nconfig.LoggingFile <- file.path(config.Folder.Logs, 'main_script.log')\n\n# this is where the markdown files (templates) are stored\nconfig.Folder.Markdown  <- file.path(config.Folder.Root, 'markdown')\n\n#####################################################################\n# USER may make modifications in this section but not mandatory\n# this section could be sourced so can use between scripts\n#####################################################################\n\n# Delimiter in File Names (e.g., test2_AW_201301_20131231.csv)\nconfig.FileName.Delimiter  <- \"_\"\n\n#####################################################################\n\n# Acceptable column names for the data\n#(special characters (e.g., %, space, or /) are converted to \".\" by R, \"?\" converted to \"?\")\nmyUnits.AirTemp     <- \"C\" # C or F\nmyUnits.WaterTemp   <- myUnits.AirTemp\nmyUnits.AirBP       <- \"psi\"\nmyUnits.WaterP      <- myUnits.AirBP\nmyUnits.WaterLevel  <- \"ft\"\nmyUnits.Discharge   <- \"ft3.s\"\n\n## Air and Water\nmyName.SiteID         <- \"SiteID\"\nmyName.Date           <- \"Date\"\nmyName.Time           <- \"Time\"\nmyName.DateTime       <- \"Date.Time\" # this has to be in the input file Erik had it as 'Date.Time'\n\n## Water\nmyName.RowID.Water    <- \"Water.RowID\"\nmyName.LoggerID.Water <- \"Water.LoggerID\"\nmyName.WaterTemp      <- paste0(\"Water.Temp.\",myUnits.WaterTemp)  # \"?\" from HoboWare files sometimes adds \"? \" in front.  Replace with \".\" in R.\n\n## Air\nmyName.RowID.Air      <- \"Air.RowID\"\nmyName.LoggerID.Air   <- \"Air.LoggerID\"\nmyName.AirTemp        <- paste0(\"Air.Temp.\", myUnits.AirTemp)   # \"?\" from HoboWare files sometimes adds \"? \" in front.  Replace with \".\" in R.\nmyName.WaterP         <- paste0(\"Water.BP.\", myUnits.WaterP)\nmyName.AirBP          <- paste0(\"Air.BP.\", myUnits.WaterP)\nmyName.WaterLevel     <- paste0(\"Water.Level.\", myUnits.WaterLevel)\nmyName.Discharge      <- paste0(\"Discharge.\", myUnits.Discharge)\n\n## plot labels\nmyLab.WaterTemp       <- paste(\"Temperature, Water (?\",myUnits.WaterTemp,\")\",sep=\"\")\nmyLab.AirTemp         <- paste(\"Temperature, Air (?\",myUnits.AirTemp,\")\",sep=\"\")\nmyLab.Date            <- \"Date\"\nmyLab.DateTime        <- \"Date\"\nmyLab.WaterP          <- paste(\"Pressure, Water (\",myUnits.AirBP,\")\",sep=\"\")\nmyLab.AirBP           <- paste(\"Barometric Pressure, Air (\",myUnits.WaterP,\")\",sep=\"\")\nmyLab.WaterLevel      <- paste(\"Water Level (\",myUnits.WaterLevel,\")\",sep=\"\")\nmyLab.Temp.BOTH       <- paste(\"Temperature (?\",myUnits.WaterTemp,\")\",sep=\"\")\nmyLab.Discharge       <- paste(\"Discharge (ft?/s)\")\n\n#####################################################################\n# Discrete Measurements\nmyPrefix.Discrete           <- \"Discrete\"\nmyName.Discrete.WaterTemp   <- paste(myPrefix.Discrete,myName.WaterTemp,sep=\".\")\nmyName.Discrete.AirTemp     <- paste(myPrefix.Discrete,myName.AirTemp,sep=\".\")\nmyName.Discrete.WaterP      <- paste(myPrefix.Discrete,myName.WaterP,sep=\".\")\nmyName.Discrete.AirBP       <- paste(myPrefix.Discrete,myName.AirBP,sep=\".\")\nmyName.Discrete.WaterLevel  <- paste(myPrefix.Discrete,myName.WaterLevel,sep=\".\")\nmyName.Discrete.Discharge   <- paste(myPrefix.Discrete,myName.Discharge,sep=\".\")\nmyLab.Discrete.WaterTemp    <- paste(myLab.WaterTemp,\"(Discrete)\",sep=\" \")\nmyLab.Discrete.AirTemp      <- paste(myLab.AirTemp,\"(Discrete)\",sep=\" \")\nmyLab.Discrete.WaterP       <- paste(myLab.WaterP,\"(Discrete)\",sep=\" \")\nmyLab.Discrete.AirBP        <- paste(myLab.AirBP,\"(Discrete)\",sep=\" \")\nmyLab.Discrete.WaterLevel   <- paste(myLab.WaterLevel,\"(Discrete)\",sep=\" \")\nmyLab.Discrete.Discharge    <- paste(myLab.Discharge,\"(Discrete)\",sep=\" \")\n\n#####################################################################\n# Automated QC stuff\n## data type/stages\nmyDataQuality.Raw         <- \"RAW\"\nmyDataQuality.QCauto      <- \"QCauto\"\nmyDataQuality.QCmanual    <- \"QCmanual\"\nmyDataQuality.Final       <- \"Final\"\nmyDataQuality.Aggregated  <- \"Aggregated\"\n\n#####################################################################\n\n# Data Fields\nmyNames.DataFields <- c(myName.WaterTemp,myName.AirTemp,myName.WaterP,myName.AirBP,myName.WaterLevel,myName.Discharge\n                        ,myName.Discrete.WaterTemp,myName.Discrete.AirTemp,myName.Discrete.WaterP,myName.Discrete.AirBP,\n                        myName.Discrete.WaterLevel,myName.Discrete.Discharge)\n\nmyNames.DataFields.Lab <- c(myLab.WaterTemp,myLab.AirTemp,myLab.WaterP,myLab.AirBP,myLab.WaterLevel,myLab.Discharge\n                            ,myLab.Discrete.WaterTemp,myLab.Discrete.AirTemp,myLab.Discrete.WaterP,myLab.Discrete.AirBP,\n                            myLab.Discrete.WaterLevel,myLab.Discrete.Discharge)\n\nmyNames.DataFields.Col <- c(\"blue\",\"green\",\"gray\",\"gray\",\"black\",\"brown\")\n\n# Name Order (change order below to change order in output file)\n#\nmyNames.Order <- c(myName.SiteID,myName.Date,myName.Time,myName.DateTime,myName.WaterTemp,myName.LoggerID.Air,myName.RowID.Air\n                   ,myName.AirTemp,myName.WaterP,myName.AirBP,myName.WaterLevel,myName.LoggerID.Water,myName.RowID.Water,myName.Discharge\n                   ,myName.Discrete.WaterTemp,myName.Discrete.AirTemp,myName.Discrete.WaterP,myName.Discrete.AirBP\n                   ,myName.Discrete.WaterLevel,myName.Discrete.Discharge)\n\n######################################################################\n\n## Data Quality Flag Values\n\nmyFlagVal.Pass     <- \"P\" # try and leave it blank \"P\"\nmyFlagVal.NotEval  <- \"NA\"\nmyFlagVal.Suspect  <- \"S\"\nmyFlagVal.Fail     <- \"F\"\nmyFlagVal.NoData   <- \"X\"\nmyFlagVal.Order    <- c(myFlagVal.Pass, myFlagVal.Suspect, myFlagVal.Fail, myFlagVal.NoData)\n\n#####################################################################\n\n# QC Tests and Calculations\n#http://stackoverflow.com/questions/16143700/pasting-two-vectors-with-combinations-of-all-vectors-elements\n#myNames.QCTests.Calcs.combo <- as.vector(t(outer(myNames.QCTests,myNames.QCTests.Calcs,paste,sep=\".\")))\n# combine so can check for and remove later.\n#myNames.DataFields.QCTests.Calcs.combo <- as.vector(t(outer(myNames.DataFields,myNames.QCTests.Calcs.combo,paste,sep=\".\")))\n# Data Quality Flag Thresholds\n## Gross Min/Max, Fail (equipment)\nmyThresh.Gross.Fail.Hi.WaterTemp  <- 30\nmyThresh.Gross.Fail.Lo.WaterTemp  <- -2\nmyThresh.Gross.Fail.Hi.AirTemp    <- 35\nmyThresh.Gross.Fail.Lo.AirTemp    <- -25\nmyThresh.Gross.Fail.Hi.WaterP     <- 17\nmyThresh.Gross.Fail.Lo.WaterP     <- 11\nmyThresh.Gross.Fail.Hi.AirBP      <- 17\nmyThresh.Gross.Fail.Lo.AirBP      <- 11\nmyThresh.Gross.Fail.Hi.WaterLevel <- 6    # no longer used (only check for negative values for WaterLevel)\nmyThresh.Gross.Fail.Lo.WaterLevel <- -1   # no longer used (only check for negative values for WaterLevel)\nmyThresh.Gross.Fail.Hi.Discharge  <- 10^5 #dependant upon stream size (only checkf or negative values)\nmyThresh.Gross.Fail.Lo.Discharge  <- -1   #dependant upon stream size\n\n## Gross Min/Max, Suspect (extreme)\nmyThresh.Gross.Suspect.Hi.WaterTemp  <- 25\nmyThresh.Gross.Suspect.Lo.WaterTemp  <- -1\nmyThresh.Gross.Suspect.Hi.AirTemp    <- 30\nmyThresh.Gross.Suspect.Lo.AirTemp    <- -20\nmyThresh.Gross.Suspect.Hi.WaterP     <- 16\nmyThresh.Gross.Suspect.Lo.WaterP     <- 12\nmyThresh.Gross.Suspect.Hi.AirBP      <- 16\nmyThresh.Gross.Suspect.Lo.AirBP      <- 12\nmyThresh.Gross.Suspect.Hi.WaterLevel <- 5    # no longer used (only check for negative values for WaterLevel)\nmyThresh.Gross.Suspect.Lo.WaterLevel <- 0    # no longer used (only check for negative values for WaterLevel)\nmyThresh.Gross.Suspect.Hi.Discharge  <- 10^3 #dependant upon stream size (only checkf or negative values\nmyThresh.Gross.Suspect.Lo.Discharge  <- -1   #dependant upon stream size\n\n## Spike thresholds (absolute change)\nmyThresh.Spike.Hi.WaterTemp   <- 10\nmyThresh.Spike.Lo.WaterTemp   <- 5\nmyThresh.Spike.Hi.AirTemp     <- 10\nmyThresh.Spike.Lo.AirTemp     <- 5\nmyThresh.Spike.Hi.WaterP      <- 5\nmyThresh.Spike.Lo.WaterP      <- 3\nmyThresh.Spike.Hi.AirBP       <- 5\nmyThresh.Spike.Lo.AirBP       <- 3\nmyThresh.Spike.Hi.WaterLevel  <- 5\nmyThresh.Spike.Lo.WaterLevel  <- 3\nmyThresh.Spike.Hi.Discharge   <- 10^4 #dependant upon stream size\nmyThresh.Spike.Lo.Discharge   <- 10^3 #dependant upon stream size\n\n## Rate of Change (relative change)\nmyDefault.RoC.SD.number   <- 3\nmyDefault.RoC.SD.period   <- 25 #hours\nmyThresh.RoC.SD.number.WaterTemp  <- myDefault.RoC.SD.number\nmyThresh.RoC.SD.period.WaterTemp  <- myDefault.RoC.SD.period\nmyThresh.RoC.SD.number.AirTemp    <- myDefault.RoC.SD.number\nmyThresh.RoC.SD.period.AirTemp    <- myDefault.RoC.SD.period\nmyThresh.RoC.SD.number.WaterP     <- myDefault.RoC.SD.number\nmyThresh.RoC.SD.period.WaterP     <- myDefault.RoC.SD.period\nmyThresh.RoC.SD.number.AirBP      <- myDefault.RoC.SD.number\nmyThresh.RoC.SD.period.AirBP      <- myDefault.RoC.SD.period\nmyThresh.RoC.SD.number.WaterLevel <- myDefault.RoC.SD.number\nmyThresh.RoC.SD.period.WaterLevel <- myDefault.RoC.SD.period\nmyThresh.RoC.SD.number.Discharge  <- myDefault.RoC.SD.number\nmyThresh.RoC.SD.period.Discharge  <- myDefault.RoC.SD.period\n\n## No Change (flat-line)\nmyDefault.Flat.Hi         <- 30  # maximum is myThresh.Flat.MaxComp\nmyDefault.Flat.Lo         <- 10\nmyDefault.Flat.Tolerance  <- 0.01 # set to one sigdig less than measurements.  Check with fivenum(x)\n\nmyThresh.Flat.Hi.WaterTemp          <- myDefault.Flat.Hi\nmyThresh.Flat.Lo.WaterTemp          <- myDefault.Flat.Lo\nmyThresh.Flat.Tolerance.WaterTemp   <- 0.01\nmyThresh.Flat.Hi.AirTemp            <- myDefault.Flat.Hi\nmyThresh.Flat.Lo.AirTemp            <- myDefault.Flat.Lo\nmyThresh.Flat.Tolerance.AirTemp     <- 0.01\nmyThresh.Flat.Hi.WaterP             <- myDefault.Flat.Hi\nmyThresh.Flat.Lo.WaterP             <- myDefault.Flat.Lo\nmyThresh.Flat.Tolerance.WaterP      <- 0.001\nmyThresh.Flat.Hi.AirBP              <- myDefault.Flat.Hi\nmyThresh.Flat.Lo.AirBP              <- myDefault.Flat.Lo\nmyThresh.Flat.Tolerance.AirBP       <- 0.001\nmyThresh.Flat.Hi.WaterLevel         <- myDefault.Flat.Hi * 2\nmyThresh.Flat.Lo.WaterLevel         <- myDefault.Flat.Lo * 2\nmyThresh.Flat.Tolerance.WaterLevel  <- 0.0\nmyThresh.Flat.Hi.Discharge          <- myDefault.Flat.Hi * 2\nmyThresh.Flat.Lo.Discharge          <- myDefault.Flat.Lo * 2\nmyThresh.Flat.Tolerance.Discharge   <- 0.01\nmyThresh.Flat.MaxComp     <- max(myThresh.Flat.Hi.WaterTemp\n                                 ,myThresh.Flat.Hi.AirTemp\n                                 ,myThresh.Flat.Hi.WaterP\n                                 ,myThresh.Flat.Hi.AirBP\n                                 ,myThresh.Flat.Hi.WaterLevel\n                                 ,myThresh.Flat.Hi.Discharge)\n\n#####################################################################\n\n# Data Fields with Flags\nmyName.Flag <- \"Flag\" # flag prefix\nmyNames.Cols4Flags <- c(myName.DateTime, myNames.DataFields)\nmyNames.Flags <- paste(myName.Flag, myNames.Cols4Flags, sep=\".\")  # define ones using in the calling script\n\n## flag labels\nmyName.Flag.DateTime    <- paste(myName.Flag,myName.DateTime,sep=\".\")\nmyName.Flag.WaterTemp   <- paste(myName.Flag,myName.WaterTemp,sep=\".\")\nmyName.Flag.AirTemp     <- paste(myName.Flag,myName.AirTemp,sep=\".\")\nmyName.Flag.WaterP      <- paste(myName.Flag,myName.WaterP,sep=\".\")\nmyName.Flag.AirBP       <- paste(myName.Flag,myName.AirBP,sep=\".\")\nmyName.Flag.WaterLevel  <- paste(myName.Flag,myName.WaterLevel,sep=\".\")\nmyName.Flag.Discharge   <- paste(myName.Flag,myName.Discharge,sep=\".\")\n\n# Data Quality Test Names\nmyNames.QCTests <- c(\"Gross\",\"Spike\",\"RoC\",\"Flat\")\nmyNames.QCCalcs <- c(\"SD.Time\",\"SD\",\"SDxN\",paste(\"n\",1:myThresh.Flat.MaxComp,sep=\".\"), \"flat.Lo\", \"flat.Hi\")\n\n#####################################################################\n# Exceedance values for stats (default to Gross-Suspect-Hi value)\nmyExceed.WaterTemp  <- myThresh.Gross.Suspect.Hi.WaterTemp\nmyExceed.AirTemp    <- myThresh.Gross.Suspect.Hi.AirTemp\nmyExceed.WaterLevel <- myThresh.Gross.Suspect.Hi.WaterLevel\n\n#####################################################################\n# Date and Time Formats\nmyFormat.Date           <- \"%Y-%m-%d\"\nmyFormat.Time           <- \"%H:%M:%S\"\nmyFormat.DateTime       <- \"%Y-%m-%d %H:%M:%S\"\nDateRange.Start.Default <- \"1900-01-01\" #YYYY-MM-DD\nDateRange.End.Default   <- format(Sys.Date(),\"%Y-%m-%d\")\n# Time Zone, used in Gage script in dataRetrieval\nmyTZ <- \"America/New_York\"\n\npbcc.Format.Date <- \"%d-%b-%y\"\n\n######################################################################\n\n# Time Frames (MM-DD)\nmyTimeFrame.Annual.Start        <- \"0101\"\nmyTimeFrame.Annual.End          <- \"1231\"\nmyTimeFrame.WaterYear.Start     <- \"1001\"\n#myTimeFrame.WaterYear.End      <- \"0930\"\nmyTimeFrame.Season.Spring.Start <- \"0301\"\n#myTimeFrame.Season.Spring.End  <- \"0531\"\nmyTimeFrame.Season.Summer.Start <- \"0601\"\n#myTimeFrame.Season.Summer.End  <- \"0831\"\nmyTimeFrame.Season.Fall.Start   <- \"0901\"\n#myTimeFrame.Season.Fall.End    <- \"1130\"\nmyTimeFrame.Season.Winter.Start <- \"1201\"\n#myTimeFrame.Season.Winter.End  <- \"0228\" #but 0229 in leap year, use start dates only\n# Time Frame Names\nmyName.Yr       <- \"Year\"\nmyName.YrMo     <- \"YearMonth\"\nmyName.Mo       <- \"Month\"\nmyName.MoDa     <- \"MonthDay\"\nmyName.JuDa     <- \"JulianDay\"\nmyName.Season   <- \"Season\"\nmyName.YrSeason <- \"YearSeason\"\n\n######################################################################\n\n# Trigger for Stats to exclude (TRUE) or include (FALSE) where flag = \"fail\"\nmyStats.Fails.Exclude <- TRUE\n\n######################################################################\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    "created" : 1488992395749.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4229280077",
    "id" : "84C32C50",
    "lastKnownWriteTime" : 1490714743,
    "last_content_update" : 1490714743749,
    "path" : "~/tn_realtime/working/R_scripts/libs/config.R",
    "project_path" : "libs/config.R",
    "properties" : {
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}